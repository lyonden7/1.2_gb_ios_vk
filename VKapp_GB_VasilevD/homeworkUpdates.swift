//
//  homeworkUpdates.swift
//  VKapp_GB_VasilevD
//
//  Created by Денис Васильев on 19/10/2019.
//  Copyright © 2019 Denis Vasilev. All rights reserved.
//


/*
 
 
 ===   pull 8 (ДЗ к 8 уроку)   ===   14.02.2020   ===
 
 8.1. (выполнено) На экране просмотра фото добавить возможность просматривать все снимки по очереди. На весь экран, как и раньше, будет фотография, но перелистывать можно будет свайпами.

 8.2. (выполнено) Сделать анимацию перелистывания, которая состоит из двух частей. Сначала фотография немного отдаляется, а затем новый снимок выдвигается справа. При пролистывании назад анимация должна показываться в обратном направлении.

 8.3. (выполнено) * Модифицировать анимацию перелистывания фотографий так, чтобы она была интерактивной — с возможностью начать перелистывать и отменить это действие, а также управлять прогрессом анимации.

 8.4. * Модифицировать индикатор загрузки. Удалить предыдущую анимацию и сделать новую — фигуру в виде облака, по контуру которого передвигается линия. Линия должна быть фиксированной длины, с закругленными концами.
 
 
 
 ===   pull 7 (ДЗ к 7 уроку)   ===   20.11.2019   ===
 
 На основе предыдущего ПЗ:

 7.1. (выполнено) Создать индикатор загрузки, который будет состоять из трех точек, меняющих прозрачность по очереди.

 7.2. (не успел разобрать - сделаю позднее) Добавить анимацию нажатия на аватарку пользователя/группы в соответствующих таблицах. По нажатию фотография должна немного сжиматься, а после — возвращаться в исходное положение с эффектом пружины. Нужно подобрать оптимальное время анимации, чтобы получить максимально реалистичный эффект.

 7.3. (выполнено) Сделать анимацию изменения количества отметок «Мне нравится». Это может быть любая анимация: переворот из стороны в сторону, плавная смена или перелистывание.

 7.4. (не успел разобрать - сделаю позднее) *Сделать анимацию появления и исчезновения ячеек с фотографиями. Перед показом ячейки она должна увеличиваться и становиться непрозрачной, а перед исчезновением — уменьшаться и становиться прозрачной (необязательное, для тех у кого есть время).

 7.5. (не успел разобрать - сделаю позднее) *Сделать кастомную строку поиска (как UISearchBar). Посередине должна находиться иконка лупы. Когда строку поиска активируют, лупа перемещается в сторону и останавливается с эффектом пружины. Также в этот момент строка поиска сужается с правой стороны и на пустом месте появляется кнопка отмены. Все это происходит анимировано. Когда поиск отменяется или со строки поиска снимается фокус, она должна вернуться в исходное состояние (необязательное, для тех, у кого есть время).
 
 
 Дополнительно:
 ***: в FriendsPhotoController добавлен title.

4.3. (выполнено) Создать контрол «Мне нравится», с помощью которого можно поставить лайк под постом в ленте. Данный контрол должен объединять кнопку с иконкой сердца и количеством отметок рядом с ней. При нажатии на контрол нужно увеличить количество отметок, а при повторном нажатии — уменьшить (как это реализовано в приложении ВКонтакте). В состоянии, когда отметка поставлена, иконка и текст должны менять цвет.
 
 ***: исправлена ошибка в FriendsController, из-за которой после группировки (задание 6.1) по нажатию на друзей выводились неправильные фото (для друзей из второй и последующих секций выводились фото друзей из первой секции)
 
 
 
 ===   pull 6 (ДЗ к 6 уроку)   ===   13.11.2019   ===
 
 На основе предыдущего ПЗ.

 6.1. (выполнено, по имени) Сделать группировку друзей по первой букве фамилии. Добавить header секции для таблицы со списком друзей. Он должен содержать первую букву фамилии и иметь полупрозрачный цвет фона, цвет которого совпадает с цветом таблицы.

 6.2. (выполнено, для групп) Добавьте UISearchBar в header таблицы со списком друзей и групп. Укажите контроллер, содержащий эту таблицу, делегатом UISearchBar, реализуйте поиск с выводом результатов в ту же таблицу. Для простоты реализации не стоит использовать UISearchController (задание на самостоятельный поиск решения).

 6.3. (не успел разобрать - сделаю позднее) Создать экран новостей. Добавить туда таблицу и сделать ячейку для новости. Ячейка должна содержать то же самое, что и в оригинальном приложении ВКонтакте: надпись, фотографии, кнопки «Мне нравится», «Комментировать», «Поделиться» и индикатор количества просмотров. Сделать поддержку только одной фотографии, которая должна быть квадратной формы и растягиваться на всю ширину ячейки. Высота ячейки должна вычисляться автоматически.

 6.4. (не успел разобрать - сделаю позднее) *В ячейку новости добавить отображение нескольких фотографий. Они должны располагаться в квадратной зоне, ширина которой равна ширине ячейки. В идеале нужно сделать равномерное расположение фотографий в квадратной области (необязательное, для тех, у кого есть время).
 
 
 
 ===   pull 5 (ДЗ к 5 уроку)   ===   10.11.2019   ===
 
 5.1. Посвятите это время работе над вашим проектом. Ваше портфолио - это ваше лицо для будущих работодателей.

 5.2. Доделайте те задания, которые не успели сделать к предыдущим урокам.

 5.3*. Добавьте в ваш проект какие-нибудь новые фичи на ваше усмотрение.
 
 Результат:
 - исправлена ошибка на экране всех групп (из комментария к предыдущему ДЗ) - слетел Aspect Ratio
 - начал создавать контрол "Мне нравится" - пока застопорился, не понимаю что дальше делать. Оставил пока как есть.
 - в FriendsPhotoController добавил extension для автоматического подсчета размеров ячейки. Есть ощущение, что автоподсчет не работает, ячейка как была фиксированного размера, такой и осталась.
  - в FriendsPhotoController пытался добавить title - крашится, пока не нашел причину. (закомментировано)
 
 
 
 ===   pull 4 (ДЗ к 4 уроку)   ===   06.11.2019   ===
 
 4.1. (выполнено) Создать свой View для аватарки. Он должен состоять из двух subview:
    a) Должен содержать UIImageView с фотографией пользователя и быть круглой формы.
    b) Должен находиться ниже и давать тень по периметру фотографии. Учтите, что тень будет отображена, если backgroudColor != .clear.

 4.2. (выполнено) Предусмотреть возможность изменения ширины, цвета, прозрачности тени в interface builder. (задание на самостоятельный поиск решения).

 4.3. (не успел разобрать - сделаю в ДЗ к 5 уроку) Создать контрол «Мне нравится», с помощью которого можно поставить лайк под постом в ленте. Данный контрол должен объединять кнопку с иконкой сердца и количеством отметок рядом с ней. При нажатии на контрол нужно увеличить количество отметок, а при повторном нажатии — уменьшить (как это реализовано в приложении ВКонтакте). В состоянии, когда отметка поставлена, иконка и текст должны менять цвет.

 4.4 (не успел разобрать - сделаю позднее) *Сделать контрол, позволяющий выбрать букву алфавита. Он понадобится на экране списка друзей. Дизайн можно позаимствовать у оригинального приложения ВКонтакте. Должна быть возможность выбрать букву нажатием или перемещением пальца по контролу. При выборе нужно пролистывать список к первому человеку, у которого фамилия начинается на эту букву. Желательно сделать так, чтобы в этом контроле не было букв, на которые не начинается ни одна фамилия друзей из списка. (необязательное, для тех, у кого есть время)
 
 
 
  ===   pull 3 (ДЗ к 3 уроку)   ===   02.11.2019   ===
 
 3.1: (выполнено) Добавить на все контроллеры прототипы ячеек.

 3.2: (выполнено) На первой вкладке UITableViewController должен отображать список друзей пользователя. В прототипе ячеек должна быть текстовая надпись с именем друга и изображением с его аватаркой.

 3.3: (выполнено) UICollectionViewController должен отображать фото выбранного друга, соответственно, в прототипе ячейки должно быть изображение.

 3.4: (выполнено) На второй вкладке UITableViewController должен отображать группы пользователя. Прототип должен содержать текстовую надпись для имени группы и изображение для её аватарки.

 3.5: (выполнено) Второй UITableViewController будет отображать группы, в которых пользователь не состоит. В будущем мы добавим возможностью поиска сообщества по названию. Ячейки должны использоваться такие же, как и на прошлом контроллере.

 3.6: (выполнено) Создать папку Model. В ней создать файлы содержащие struct, или class, описывающий профиль пользователя — User, группу ВКонтакте — Group.

 3.7: (выполнено) Подготовить массивы демонстрационных данных, отобразить эти данные на соответствующих им экранах.

 3.8: (выполнено) Реализовать добавление и удаление групп пользователя.
 
 
 
 ===   pull 2 (ДЗ к 2 уроку)   ===   23.10.2019   ===
 
 2.1: (выполнено) Добавить в приложение UITabbarViewController, три UITableViewController и один UICollectionViewController.

 2.2: (выполнено) После того, как пользователь ввел верные логин и пароль, перейти на UITabbarViewController.

 2.3: (выполнено) Добавить две вкладки в UITabbarViewController.

 2.4: (выполнено) На первой вкладке настроить переходы в следующем порядке: UINavigationController — UITableViewController — UICollectionViewController. Будущая вкладка для отображения друзей пользователя ВКонтакте и его фотографий. Переход с таблицы на коллекцию должен происходить по нажатию на ячейку.

 2.5: (выполнено) На второй вкладке — в порядке: UINavigationController — UITableViewController — UITableViewController. Первый контроллер для отображения групп пользователя, второй для отображения глобального поиска групп, которые могут быть интересны пользователю. Для перехода с первой таблицы на вторую на NavigationBar необходимо создать Bar Button Item.

 1.3: Исправлена проблема с Constraints и Scroll.
 
 ***: Изменено расположение элементов на экране входа в альбомной ориентации для iphone 11 и iphone 11 pro max.
 
 
 
 ===   pull 1 (ДЗ к 1 уроку)   ===   20.10.2019   ===
 
 1.1 : создать приложение - выполнено.
 1.2 : добавить форму для входа - выполнено.
 1.3 : адаптировать форму для телефонов в альбомной ориентации, планшетов:      (upd. 23.10.19 - исправлено)
            - не работает прокрутка (scroll)
            - расскажите пожалуйста подробнее про Content Layout Guide и Frame Layout Guide у ScrollView

 
 
 */
